diff --git a/arch/arm64/boot/dts/rockchip/Makefile b/arch/arm64/boot/dts/rockchip/Makefile
index 2fed26724f96..591c7b04cdfa 100644
--- a/arch/arm64/boot/dts/rockchip/Makefile
+++ b/arch/arm64/boot/dts/rockchip/Makefile
@@ -139,6 +139,12 @@ dtb-$(CONFIG_ARCH_ROCKCHIP) += rk3568-nvr-demo-v10-linux.dtb
 dtb-$(CONFIG_ARCH_ROCKCHIP) += rk3568-nvr-demo-v10-linux-spi-nand.dtb
 dtb-$(CONFIG_ARCH_ROCKCHIP) += rk3568-nvr-demo-v12-linux.dtb
 dtb-$(CONFIG_ARCH_ROCKCHIP) += rk3568-nvr-demo-v12-linux-spi-nand.dtb
+dtb-$(CONFIG_ARCH_ROCKCHIP) += rk3588-blueberry-edge-v10-linux.dtb
+dtb-$(CONFIG_ARCH_ROCKCHIP) += rk3588-blueberry-edge-v12-linux.dtb
+dtb-$(CONFIG_ARCH_ROCKCHIP) += rk3588-blueberry-edge-v12-maizhuo-linux.dtb
+dtb-$(CONFIG_ARCH_ROCKCHIP) += rk3588-blueberry-edge-v14-linux.dtb
+dtb-$(CONFIG_ARCH_ROCKCHIP) += rk3588-blueberry-minipc-linux.dtb
+dtb-$(CONFIG_ARCH_ROCKCHIP) += rk3588-blueberry-minipc-mizhuo-linux.dtb
 dtb-$(CONFIG_ARCH_ROCKCHIP) += rk3588-evb1-lp4-v10.dtb
 dtb-$(CONFIG_ARCH_ROCKCHIP) += rk3588-evb1-lp4-v10-ipc-6x-linux.dtb
 dtb-$(CONFIG_ARCH_ROCKCHIP) += rk3588-evb1-lp4-v10-linux.dtb
diff --git a/arch/arm64/configs/rockchip_linux_defconfig b/arch/arm64/configs/rockchip_linux_defconfig
index 37e69e7e8ae4..9cba2d9a10f9 100644
--- a/arch/arm64/configs/rockchip_linux_defconfig
+++ b/arch/arm64/configs/rockchip_linux_defconfig
@@ -105,6 +105,7 @@ CONFIG_NET=y
 CONFIG_PACKET=y
 CONFIG_UNIX=y
 CONFIG_XFRM_USER=y
+CONFIG_TUN=y
 CONFIG_NET_KEY=y
 CONFIG_INET=y
 CONFIG_IP_MULTICAST=y
@@ -204,14 +205,55 @@ CONFIG_STMMAC_ETH=y
 # CONFIG_NET_VENDOR_TI is not set
 # CONFIG_NET_VENDOR_VIA is not set
 # CONFIG_NET_VENDOR_WIZNET is not set
+CONFIG_NET_VENDOR_AQUANTIA=y
+CONFIG_AQTION=y
 CONFIG_MOTORCOMM_PHY=y
 CONFIG_ROCKCHIP_PHY=y
-CONFIG_RK630_PHY=y
+CONFIG_PPP=y
+CONFIG_PPP_BSDCOMP=y
+CONFIG_PPP_DEFLATE=y
+CONFIG_PPP_FILTER=y
+CONFIG_PPP_MPPE=y
+CONFIG_PPP_MULTILINK=y
+CONFIG_PPPOE=y
+CONFIG_PPTP=y
+CONFIG_PPPOL2TP=y
+CONFIG_PPP_ASYNC=y
+CONFIG_PPP_SYNC_TTY=y
+CONFIG_USB_CATC=y
+CONFIG_USB_KAWETH=y
+CONFIG_USB_PEGASUS=y
 CONFIG_USB_RTL8150=y
 CONFIG_USB_RTL8152=y
+CONFIG_USB_USBNET=y
+CONFIG_USB_NET_CDC_EEM=y
+CONFIG_USB_NET_CDC_MBIM=y
+CONFIG_USB_NET_DM9601=y
+CONFIG_USB_NET_SMSC75XX=y
+CONFIG_USB_NET_SMSC95XX=y
+CONFIG_USB_NET_GL620A=y
+CONFIG_USB_NET_PLUSB=y
+CONFIG_USB_NET_MCS7830=y
+CONFIG_USB_NET_RNDIS_HOST=y
+CONFIG_USB_NET_AQC111=y
+CONFIG_USB_ALI_M5632=y
+CONFIG_USB_AN2720=y
+CONFIG_USB_EPSON2888=y
+CONFIG_USB_KC2190=y
+CONFIG_USB_NET_CX82310_ETH=y
+CONFIG_USB_NET_KALMIA=y
+CONFIG_USB_NET_QMI_WWAN=y
+CONFIG_USB_GOBI_NET=y
+CONFIG_USB_HSO=y
+CONFIG_USB_NET_INT51X1=y
+CONFIG_USB_IPHETH=y
+CONFIG_USB_SIERRA_NET=y
 CONFIG_WL_ROCKCHIP=y
 CONFIG_WIFI_BUILD_MODULE=y
 CONFIG_AP6XXX=m
+CONFIG_BCMDHD_PCIE=y
+CONFIG_RTL8852BE=m
+CONFIG_MT7915E=m
 CONFIG_INPUT_FF_MEMLESS=y
 CONFIG_INPUT_EVDEV=y
 CONFIG_KEYBOARD_ADC=y
@@ -344,6 +386,8 @@ CONFIG_DRM_DISPLAY_CONNECTOR=y
 CONFIG_DRM_SII902X=y
 CONFIG_DRM_DW_HDMI_I2S_AUDIO=y
 CONFIG_DRM_DW_HDMI_CEC=y
+#totty
+#CONFIG_FRAMEBUFFER_CONSOLE=y
 CONFIG_MALI400=y
 CONFIG_MALI450=y
 # CONFIG_MALI400_PROFILING is not set
@@ -358,6 +402,7 @@ CONFIG_MALI_DEBUG=y
 CONFIG_MALI_PWRSOFT_765=y
 CONFIG_MALI_BIFROST=y
 CONFIG_MALI_PLATFORM_NAME="rk"
+CONFIG_MALI_CSF_SUPPORT=y
 CONFIG_MALI_BIFROST_EXPERT=y
 CONFIG_MALI_BIFROST_DEBUG=y
 CONFIG_BACKLIGHT_CLASS_DEVICE=y
@@ -440,6 +485,7 @@ CONFIG_USB_DWC3=y
 CONFIG_USB_DWC2=y
 CONFIG_USB_SERIAL=y
 CONFIG_USB_SERIAL_GENERIC=y
+CONFIG_USB_SERIAL_CH341=y
 CONFIG_USB_SERIAL_CP210X=y
 CONFIG_USB_SERIAL_FTDI_SIO=y
 CONFIG_USB_SERIAL_KEYSPAN=y
@@ -457,6 +503,10 @@ CONFIG_USB_CONFIGFS_ACM=y
 CONFIG_USB_CONFIGFS_MASS_STORAGE=y
 CONFIG_USB_CONFIGFS_F_FS=y
 CONFIG_USB_CONFIGFS_F_UVC=y
+CONFIG_USB_CONFIGFS_RNDIS=y
+CONFIG_USB_CONFIGFS_F_UAC1=y
+CONFIG_USB_CONFIGFS_F_UAC2=y
+CONFIG_USB_CONFIGFS_F_HID=y
 CONFIG_TYPEC_TCPM=y
 CONFIG_TYPEC_TCPCI=y
 CONFIG_TYPEC_HUSB311=y
@@ -473,8 +523,14 @@ CONFIG_MMC_DW=y
 CONFIG_MMC_DW_ROCKCHIP=y
 CONFIG_NEW_LEDS=y
 CONFIG_LEDS_CLASS=y
+CONFIG_LEDS_CLASS_FLASH=y
 CONFIG_LEDS_GPIO=y
-CONFIG_LEDS_IS31FL32XX=y
+CONFIG_LEDS_RGB13H=y
+CONFIG_LEDS_TRIGGERS=y
+CONFIG_LEDS_TRIGGER_TIMER=y
+CONFIG_LEDS_TRIGGER_HEARTBEAT=y
+CONFIG_LEDS_TRIGGER_BACKLIGHT=y
+CONFIG_LEDS_TRIGGER_DEFAULT_ON=y
 CONFIG_RTC_CLASS=y
 CONFIG_RTC_DRV_HYM8563=y
 CONFIG_RTC_DRV_RK808=y
@@ -572,6 +628,8 @@ CONFIG_EXT4_FS=y
 CONFIG_EXT4_FS_POSIX_ACL=y
 CONFIG_EXT4_FS_SECURITY=y
 CONFIG_XFS_FS=y
+CONFIG_ECRYPT_FS=y
+CONFIG_EXFAT_FS=y
 # CONFIG_DNOTIFY is not set
 CONFIG_FUSE_FS=y
 CONFIG_ISO9660_FS=y
diff --git a/drivers/char/Makefile b/drivers/char/Makefile
index ffce287ef415..130b5557aa73 100644
--- a/drivers/char/Makefile
+++ b/drivers/char/Makefile
@@ -47,3 +47,5 @@ obj-$(CONFIG_PS3_FLASH)		+= ps3flash.o
 obj-$(CONFIG_XILLYBUS)		+= xillybus/
 obj-$(CONFIG_POWERNV_OP_PANEL)	+= powernv-op-panel.o
 obj-$(CONFIG_ADI)		+= adi.o
+#fox.luo@add vk2c21 lcd driver
+obj-y	+= lcd_vk2c21.o
diff --git a/drivers/media/platform/rockchip/hdmirx/rk_hdmirx.c b/drivers/media/platform/rockchip/hdmirx/rk_hdmirx.c
index 3f8675c3f4ad..766b794efd6a 100644
--- a/drivers/media/platform/rockchip/hdmirx/rk_hdmirx.c
+++ b/drivers/media/platform/rockchip/hdmirx/rk_hdmirx.c
@@ -266,8 +266,30 @@ static void hdmirx_audio_interrupts_setup(struct rk_hdmirx_dev *hdmirx_dev, bool
 static int hdmirx_set_cpu_limit_freq(struct rk_hdmirx_dev *hdmirx_dev);
 static void hdmirx_cancel_cpu_limit_freq(struct rk_hdmirx_dev *hdmirx_dev);
 static void hdmirx_plugout(struct rk_hdmirx_dev *hdmirx_dev);
+//fox.luo@2023.03.25 add hdmirx plug det
+static int screen_width = 0, screen_height =0;
+static int hdmirx_check_flag=0;
+static int audio_fs=0;
 
 static u8 edid_init_data_340M[] = {
+#if 0  //test add 1280*1024
+	0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 
+	0x49, 0x70, 0x88, 0x35, 0x01, 0x00, 0x00, 0x00, 
+	0x2D, 0x1F, 0x01, 0x03, 0x80, 0x78, 0x44, 0x78, 
+	0x0A, 0xCF, 0x74, 0xA3, 0x57, 0x4C, 0xB0, 0x23, 
+	0x09, 0x48, 0x4C, 0x21, 0x08, 0x00, 0x61, 0x40, 
+	0x81, 0x80, 0x81, 0x00, 0x95, 0x00, 0xA9, 0xC0, 
+	0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x30, 0x2A, 
+	0x00, 0x98, 0x51, 0x00, 0x2A, 0x40, 0x30, 0x70, 
+	0x13, 0x00, 0x20, 0xC2, 0x31, 0x00, 0x00, 0x1E,
+	0x01, 0x1D, 0x00, 0x72, 0x51, 0xD0, 0x1E, 0x20, 
+	0x6E, 0x28, 0x55, 0x00, 0x20, 0xC2, 0x31, 0x00, 
+	0x00, 0x1E, 0x00, 0x00, 0x00, 0xFC, 0x00, 0x48, 
+	0x47, 0x53, 0x2D, 0x55, 0x48, 0x44, 0x0A, 0x20, 
+	0x20, 0x20, 0x20, 0x20, 0x00, 0x00, 0x00, 0xFD, 
+	0x00, 0x3B, 0x46, 0x1F, 0x8C, 0x3C, 0x00, 0x0A, 
+	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x01, 0xD6,
+#else
 	0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00,
 	0x49, 0x70, 0x88, 0x35, 0x01, 0x00, 0x00, 0x00,
 	0x2D, 0x1F, 0x01, 0x03, 0x80, 0x78, 0x44, 0x78,
@@ -284,6 +306,7 @@ static u8 edid_init_data_340M[] = {
 	0x20, 0x20, 0x20, 0x20, 0x00, 0x00, 0x00, 0xFD,
 	0x00, 0x3B, 0x46, 0x1F, 0x8C, 0x3C, 0x00, 0x0A,
 	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x01, 0xA7,
+#endif	
 
 	0x02, 0x03, 0x2E, 0xF1, 0x51, 0x07, 0x16, 0x14,
 	0x05, 0x01, 0x03, 0x12, 0x13, 0x84, 0x22, 0x1F,
@@ -1497,10 +1520,10 @@ static int hdmirx_wait_lock_and_get_timing(struct rk_hdmirx_dev *hdmirx_dev)
 	}
 
 	if (i == WAIT_SIGNAL_LOCK_TIME) {
-		v4l2_err(v4l2_dev, "%s signal not lock, tmds_clk_ratio:%d\n",
-				__func__, hdmirx_dev->tmds_clk_ratio);
-		v4l2_err(v4l2_dev, "%s mu_st:%#x, scdc_st:%#x, dma_st10:%#x\n",
-				__func__, mu_status, scdc_status, dma_st10);
+		//v4l2_err(v4l2_dev, "%s signal not lock, tmds_clk_ratio:%d\n",
+		//		__func__, hdmirx_dev->tmds_clk_ratio);
+		//v4l2_err(v4l2_dev, "%s mu_st:%#x, scdc_st:%#x, dma_st10:%#x\n",
+		//		__func__, mu_status, scdc_status, dma_st10);
 
 		return -1;
 	}
@@ -1532,6 +1555,10 @@ static int hdmirx_wait_lock_and_get_timing(struct rk_hdmirx_dev *hdmirx_dev)
 	usleep_range(200*1000, 200*1010);
 	hdmirx_format_change(hdmirx_dev);
 
+	//lyh@2023.03.25 add hdmirx plug det
+	hdmirx_check_flag=1;
+	screen_width =hdmirx_dev->timings.bt.width;
+	screen_height =hdmirx_dev->timings.bt.height;
 	return 0;
 }
 
@@ -2703,7 +2730,7 @@ static irqreturn_t hdmirx_dma_irq_handler(int irq, void *dev_id)
 
 static void hdmirx_audio_interrupts_setup(struct rk_hdmirx_dev *hdmirx_dev, bool en)
 {
-	dev_info(hdmirx_dev->dev, "%s: %d", __func__, en);
+	//dev_info(hdmirx_dev->dev, "%s: %d", __func__, en);
 	if (en) {
 		hdmirx_update_bits(hdmirx_dev, AVPUNIT_1_INT_MASK_N,
 				   DEFRAMER_VSYNC_THR_REACHED_MASK_N,
@@ -2844,6 +2871,9 @@ static void hdmirx_plugout(struct rk_hdmirx_dev *hdmirx_dev)
 	flush_work(&hdmirx_dev->work_wdt_config);
 	sip_wdt_config(WDT_STOP, 0, 0, 0);
 	rockchip_clear_system_status(SYS_STATUS_HDMIRX);
+	
+	//fox.luo@2022.04.25 add hdmirx plug det			
+	hdmirx_check_flag = 0;
 }
 
 static void hdmirx_delayed_work_hotplug(struct work_struct *work)
@@ -2984,6 +3014,8 @@ static void hdmirx_audio_setup(struct rk_hdmirx_dev *hdmirx_dev)
 	as->fifo_int = false;
 	as->audio_enabled = false;
 	hdmirx_audio_set_fs(hdmirx_dev, 44100);
+	//hdmirx_audio_set_fs(hdmirx_dev, 0);
+	
 	/* Disable audio domain */
 	hdmirx_update_bits(hdmirx_dev, GLOBAL_SWENABLE, AUDIO_ENABLE, 0);
 	/* Configure Vsync interrupt threshold */
@@ -3186,6 +3218,7 @@ static void hdmirx_delayed_work_audio(struct work_struct *work)
 			dev_info(hdmirx_dev->dev, "audio on");
 			hdmirx_audio_handle_plugged_change(hdmirx_dev, 1);
 			hdmirx_dev->audio_present = true;
+			audio_fs=fs_audio;
 		}
 		if (cur_state - init_state > 16 && cur_state - pre_state > 0)
 			hdmirx_audio_clk_ppm_inc(hdmirx_dev, 10);
@@ -3196,6 +3229,7 @@ static void hdmirx_delayed_work_audio(struct work_struct *work)
 			dev_info(hdmirx_dev->dev, "audio off");
 			hdmirx_audio_handle_plugged_change(hdmirx_dev, 0);
 			hdmirx_dev->audio_present = false;
+			audio_fs=fs_audio;
 		}
 	}
 	as->pre_state = cur_state;
@@ -3279,6 +3313,38 @@ static irqreturn_t hdmirx_5v_det_irq_handler(int irq, void *dev_id)
 	return IRQ_HANDLED;
 }
 
+//fox.luo@2022.04.25 add hdmirx plug det
+static ssize_t plug_show(struct kobject *kobj, struct kobj_attribute *attr, char *buf)
+{
+	if(hdmirx_check_flag == 1)
+		return sprintf(buf, "%d,%dx%d,%d\n", 1,screen_width,screen_height,audio_fs);
+	else
+		return sprintf(buf, "%d,%dx%d,%d\n",0,0,0,0);
+}
+
+static ssize_t plug_store(struct kobject *kobj, struct kobj_attribute *attr, const char *buf, size_t count)
+{
+	int var;
+	int ret;
+
+	ret = sscanf(buf, "%du", &var);
+	if (ret < 0)
+		return ret;
+
+	return count;
+}
+
+static struct kobj_attribute plug_attribute = __ATTR_RW(plug);
+
+static struct attribute *modem_sysfs[] = {
+	&plug_attribute.attr,
+	NULL,
+};
+
+static struct attribute_group modem_attr_group = {
+	.attrs = modem_sysfs,
+};
+
 static const struct hdmirx_cec_ops hdmirx_cec_ops = {
 	.write = hdmirx_writel,
 	.read = hdmirx_readl,
@@ -4319,6 +4385,8 @@ static int hdmirx_probe(struct platform_device *pdev)
 	hdmirx_register_hdcp(dev, hdmirx_dev, hdmirx_dev->hdcp_enable);
 
 	hdmirx_register_debugfs(hdmirx_dev->dev, hdmirx_dev);
+	//fox.luo@2022.04.25 add hdmi plug
+	ret = sysfs_create_group(kobject_create_and_add("hdmi_buildin", NULL), &modem_attr_group);
 
 	hdmirx_dev->initialized = true;
 	dev_info(dev, "%s driver probe ok!\n", dev_name(dev));
diff --git a/drivers/net/ethernet/stmicro/stmmac/stmmac_main.c b/drivers/net/ethernet/stmicro/stmmac/stmmac_main.c
index e8358a1a02df..38dad56f2462 100644
--- a/drivers/net/ethernet/stmicro/stmmac/stmmac_main.c
+++ b/drivers/net/ethernet/stmicro/stmmac/stmmac_main.c
@@ -121,6 +121,14 @@ static void stmmac_exit_fs(struct net_device *dev);
 
 #define STMMAC_COAL_TIMER(x) (jiffies + usecs_to_jiffies(x))
 
+#define  LED_FIX  1
+#ifdef LED_FIX 
+#define RTL_8201F_PHY_ID  0x001cc816
+#define RTL_8211E_PHY_ID  0x001cc915
+#define RTL_8211F_PHY_ID  0x001cc916
+#define DP_83848_PHY_ID   0x20005c90
+#endif
+
 int stmmac_bus_clks_config(struct stmmac_priv *priv, bool enabled)
 {
 	int ret = 0;
@@ -4984,6 +4992,119 @@ int stmmac_reinit_ringparam(struct net_device *dev, u32 rx_size, u32 tx_size)
 	return ret;
 }
 
+#ifdef LED_FIX 
+static int phy_dp83848_led_fixup(struct phy_device *phydev)
+{
+        int value;
+
+	if (phydev->phy_id != DP_83848_PHY_ID)
+		return 0;
+
+        printk("%s in\n", __func__);
+
+	value = phy_read(phydev, 0x18);
+	value &= ~(1<<2);
+	phy_write(phydev, 0x18, value);
+
+	value = phy_read(phydev, 0x19);
+	value &= ~(1<<5);
+	phy_write(phydev, 0x19, value);
+
+	return 0;
+}
+
+static int phy_rtl8201f_led_fixup(struct phy_device *phydev)
+{
+	int value;
+
+	printk("%s in\n", __func__);
+
+	/* switch to page 7 */
+	value = phy_read(phydev, 31);
+	value &= 0xff00;
+	value |= 0x0007;
+	value = phy_write(phydev, 31, value);
+
+	/* set customized led enable */
+	value = phy_read(phydev, 19);
+	value |= (0x1<<3);
+	phy_write(phydev, 19, value);
+
+	value &= 0x0000;
+	value |= (0x1<<1);
+	value |= (0x1<<7);
+	phy_write(phydev, 17, value);
+
+	/* back to page 0 */
+	value = phy_read(phydev, 31);
+	value &= 0x0000;
+	value = phy_write(phydev, 31, value);
+
+	return 0;
+}
+
+static int phy_rtl8211e_led_fixup(struct phy_device *phydev)
+{
+	int val;
+
+	printk("%s in\n", __func__);
+	val = phy_read(phydev, 3);
+	printk("%s in  val=0x%04x\n", __func__, val);
+
+	/*switch to extension page44*/
+	phy_write(phydev, 31, 0x07);
+	phy_write(phydev, 30, 0x2c);
+
+	/*set led1(yellow) act*/
+	val = phy_read(phydev, 26);
+	val &= (~(1<<4));// bit4=0
+	val |= (1<<5);// bit5=1
+	val &= (~(1<<6));// bit6=0
+	phy_write(phydev, 26, val);
+
+	/*set led0(green) link*/
+	val = phy_read(phydev, 28);
+	val |= (7<<0);// bit0,1,2=1
+	val &= (~(7<<4));// bit4,5,6=0
+	val &= (~(7<<8));// bit8,9,10=0
+	phy_write(phydev, 28, val);
+
+	/*switch back to page0*/
+	phy_write(phydev,31,0x00);
+
+	return 0;
+}
+
+static int phy_rtl8211f_led_fixup(struct phy_device *phydev)
+{
+	int val;
+
+	printk("%s in\n", __func__);
+
+	val = phy_read(phydev, 31);
+	printk("%s in  val=0x%04x\n", __func__, val);
+	
+	/*switch to extension page31*/
+	phy_write(phydev, 31, 0xd04);
+
+	//phy_write(phydev, 0x10, 0x6d60);   /*led1-green led2-yellow */
+	phy_write(phydev, 0x10, 0xc160);   /*led1-green led2-yellow */
+	phy_write(phydev, 0x11, 0x8);  
+
+	/*switch to extension page 0xa43 enabled ssc*/
+	//phy_write(phydev, 31, 0xa43);
+	//val = phy_read(phydev, 0x19);
+	//val |= (0x3<<12);// bit12~13=11
+	//val |= (1<<7);// bit7=1
+	//phy_write(phydev, 0x19, val);
+
+	/*switch back to page0*/
+	phy_write(phydev,31,0x0);
+
+	return 0;
+}
+#endif
+
 /**
  * stmmac_dvr_probe
  * @device: device pointer
@@ -5217,6 +5338,22 @@ int stmmac_dvr_probe(struct device *device,
 		goto error_netdev_register;
 	}
 
+#ifdef LED_FIX 
+/* register the PHY board fixup */
+ret = phy_register_fixup_for_uid(RTL_8211E_PHY_ID, 0xffffffff, phy_rtl8211e_led_fixup);
+if (ret)
+	pr_warn("Cannot register PHY board fixup.\n");
+ret = phy_register_fixup_for_uid(RTL_8211F_PHY_ID, 0xffffffff, phy_rtl8211f_led_fixup);
+if (ret)
+	pr_warn("Cannot register PHY board fixup.\n");
+ret = phy_register_fixup_for_uid(RTL_8201F_PHY_ID, 0xffffffff, phy_rtl8201f_led_fixup);
+if (ret)
+	pr_warn("Cannot register PHY board fixup.\n");
+ret = phy_register_fixup_for_uid(DP_83848_PHY_ID, 0xffffffff, phy_dp83848_led_fixup);
+if (ret)
+	pr_warn("Cannot register PHY board fixup.\n");
+#endif
+
 #ifdef CONFIG_DEBUG_FS
 	stmmac_init_fs(ndev);
 #endif
