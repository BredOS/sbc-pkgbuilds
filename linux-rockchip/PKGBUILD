# Maintainer: Bill Sideris <bill88t@feline.gr>

_target=rockchip
_pkgbase="linux-$_target"
pkgbase="$_pkgbase"
pkgname=("$pkgbase" "$pkgbase-headers")
pkgver=5.10.110
kerniter=11
pkgkern="$pkgver-$kerniter"
_tag="8c4e8d205"
_kernver="${pkgkern}-${_target}_${pkgkern}-${_tag}"
pkgrel=1
arch=('aarch64')
_desc="AArch64 multi-platform $_target"
url="https://github.com/armbian/build"
license=('GPL2')
options=('!strip')
provides=("$_pkgbase")
conflics=("$_pkgbase")
source=(
  "linux.preset"
  "https://github.com/radxa-pkg/linux-rockchip/releases/download/5.10.110-11/linux-image-5.10.110-11-rockchip_5.10.110-11-8c4e8d205_arm64.deb"
  "https://github.com/radxa-pkg/linux-rockchip/releases/download/5.10.110-11/linux-headers-5.10.110-11-rockchip_5.10.110-11-8c4e8d205_arm64.deb"
)
sha512sums=(
  '2e51bb74ea886f653b7ae4c738b5c47b040a4694467362da0baa2b2ee1e329ad01813b37595588a26552f1230794ad88e06b94f3be3f0ea9d10510018b403778'
  '5f4d5328090077afe71fed67125ae24198846fb26bd345912c8e0a51173df903c1ac52b2aeda2928ce353971e10595cab5a19f68296c9cfc0b99d6d6d83fa511'
  '88dfc89567c3951102da58becee76fc63f8cff13b127da3679ba45e6a0e9d1aa29abe1909680794cb5a26bc83cb26dfc3620c39f500320c25d72b7dbefcd1e87'
)
noextract=("${source[@]##*/}")

prepare() {
  cd "$srcdir"

  rm -rf $(find -mindepth 1 -maxdepth 1 -type d)
}

_package() {
  pkgdesc="The Linux Kernel and modules - $_desc"
  depends=('coreutils' 'linux-firmware' 'kmod' 'mkinitcpio>=0.7')
  optdepends=('crda: to set the correct wireless channels of your country')
  backup=("etc/mkinitcpio.d/$_pkgbase.preset")
  provides=('WIREGUARD-MODULE')
  conflicts=('linux')

  cd "$srcdir"

  ar x "linux-image-${_kernver}_arm64.deb"
  tar -xf data.tar.xz
  ar x "linux-headers-${_kernver}_arm64.deb"
  tar -xf data.tar.xz

  install -dm755 "$pkgdir/boot"

  cp "boot/config-${pkgkern}-${_target}" "${pkgdir}/boot/config-${_target}"
  cp "boot/System.map-${pkgkern}-${_target}" "${pkgdir}/boot/System.map-${_target}"
  cp "boot/vmlinuz-${pkgkern}-${_target}" "${pkgdir}/boot/vmlinux-${_target}"

  mkdir "${pkgdir}/boot/dtbs"
  cp -r "usr/lib/linux-image-${pkgkern}-${_target}/${_target}" "${pkgdir}/boot/dtbs/${_target}"

  install -dm755 "$pkgdir/usr"
  mkdir "${pkgdir}/usr/lib" "${pkgdir}/usr/lib/modules"
  cp -r "usr/lib/linux-image-${pkgkern}-${_target}" "${pkgdir}/usr/lib/linux-image-${_target}"
  cp -r "lib/modules/${pkgkern}-${_target}" "${pkgdir}/usr/lib/modules/$pkgkern-${_target}"

  # Install mkinitcpio preset file
  sed "$_subst" linux.preset |
  install -Dm644 /dev/stdin "${pkgdir}/etc/mkinitcpio.d/$_pkgbase.preset"

  # Install boot image
  install -Dm644 "boot/vmlinuz-${pkgkern}-${_target}" "${pkgdir}/usr/lib/modules/${pkgkern}-$_target/vmlinuz"

  # Used by mkinitcpio to name the kernel
  echo "$_pkgbase" | install -Dm644 /dev/stdin "${pkgdir}/usr/lib/modules/${pkgkern}-$_target/pkgbase"
}

_package-headers() {
  pkgdesc="Header files and scripts for building modules for linux kernel - $_desc"
  conflicts=('linux-headers')

  cd "$srcdir"

  ar x "linux-image-${_kernver}_arm64.deb"
  tar -xf data.tar.xz
  ar x "linux-headers-${_kernver}_arm64.deb"
  tar -xf data.tar.xz

  install -dm755 "${pkgdir}/usr/src/linux-headers-${pkgkern}-${_target}"
}

for _p in "${pkgname[@]}"; do
  eval "package_$_p() {
    $(declare -f "_package${_p#$pkgbase}")
    _package${_p#$pkgbase}
  }"
done
