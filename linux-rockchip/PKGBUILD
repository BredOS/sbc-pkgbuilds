# Maintainer: Bill Sideris <bill88t@feline.gr>

_target=rockchip
_pkgbase="linux-$_target"
pkgbase="$_pkgbase"
pkgname=("$pkgbase" "$pkgbase-headers")
pkgver=5.10.110-11
_tag="8c4e8d205"
_kernver="$pkgver-$_target_$pkgver-$_tag"
pkgrel=1
arch=('aarch64')
_desc="AArch64 multi-platform $_target"
url="https://github.com/armbian/build"
license=('GPL2')
options=('!strip')
provides=("$_pkgbase")
conflics=("$_pkgbase")
source=(
  "linux.preset"
  "https://github.com/radxa-pkg/linux-rockchip/releases/download/5.10.110-11/linux-image-5.10.110-11-rockchip_5.10.110-11-8c4e8d205_arm64.deb"
  "https://github.com/radxa-pkg/linux-rockchip/releases/download/5.10.110-11/linux-headers-5.10.110-11-rockchip_5.10.110-11-8c4e8d205_arm64.deb"
)
sha512sums=(
  'SKIP'
  '5f4d5328090077afe71fed67125ae24198846fb26bd345912c8e0a51173df903c1ac52b2aeda2928ce353971e10595cab5a19f68296c9cfc0b99d6d6d83fa511'
  '88dfc89567c3951102da58becee76fc63f8cff13b127da3679ba45e6a0e9d1aa29abe1909680794cb5a26bc83cb26dfc3620c39f500320c25d72b7dbefcd1e87'
)
noextract=("${source[@]##*/}")

prepare() {
  cd "$srcdir"

  rm -rf $(find -mindepth 1 -maxdepth 1 -type d)
}

_package() {
  pkgdesc="The Linux Kernel and modules - $_desc"
  depends=('coreutils' 'linux-firmware' 'kmod' 'mkinitcpio>=0.7')
  optdepends=('crda: to set the correct wireless channels of your country')
  backup=("etc/mkinitcpio.d/$_pkgbase.preset")
  provides=('WIREGUARD-MODULE')
  conflicts=('linux')

  cd "$srcdir"

  ar x "linux-image-${_kernver}_arm64.deb"
  tar -xf data.tar.xz
  ar x "linux-headers-${_kernver}_arm64.deb"
  tar -xf data.tar.xz

  install -dm755 "$pkgdir/boot"

  cp "boot/config-$pkgver-$_target" "$pkgdir/config-$_target"
  cp "boot/System.map-$pkgver-$_target" "$pkgdir/System.map-$_target"
  cp "boot/vmlinuz-$pkgver-$_target" "$pkgdir/boot/vmlinux-$_target"

  install -dm755 "$pkgdir/usr"
  cp -r "usr/lib/linux-image-$pkgver-$_target" "$pkgdir/usr/lib/linux-image-$_target"
  cp -r "lib/modules/$pkgver-$_target" "$pkgdir/lib/modules/$pkgver-$_target"


  # install mkinitcpio preset file
  sed "$_subst" linux.preset |
  install -Dm644 /dev/stdin "$pkgdir/etc/mkinitcpio.d/$_pkgbase.preset"

  # install boot image
  install -Dm644 "boot/vmlinuz-$pkgver-$_target" "$pkgdir/usr/lib/modules/$pkgver-$_target/vmlinuz"

  # used by mkinitcpio to name the kernel
  echo "$_pkgbase" | install -Dm644 /dev/stdin "$pkgdir/usr/lib/modules/$pkgver-$_target/pkgbase"
}

_package-headers() {
  pkgdesc="Header files and scripts for building modules for linux kernel - $_desc"
  conflicts=('linux-headers')

  cd "$srcdir"

  ar x "linux-image-edge-${_target}_${_armbver}_arm64.deb"
  tar -xf data.tar.xz
  ar x "linux-headers-edge-${_target}_${_armbver}_arm64.deb"
  tar -xf data.tar.xz

  install -dm755 "$pkgdir/usr/lib/modules/$pkgver-$_target"
  cp -r "usr/src/linux-headers-$pkgver-$_target" "$pkgdir/usr/lib/modules/$pkgver-$_target/build"

  install -Dm644 "boot/config-$pkgver-$_target" "$pkgdir/usr/lib/modules/$pkgver-$_target/build/.config"
  install -Dm644 "boot/System.map-$pkgver-$_target" "$pkgdir/usr/lib/modules/$pkgver-$_target/build/System.map"

  # add real version for building modules and running depmod from hook
  echo "$pkgver-$_target" |
    install -Dm644 /dev/stdin "$pkgdir/usr/lib/modules/$pkgver-$_target/build/version"
}

for _p in "${pkgname[@]}"; do
  eval "package_$_p() {
    $(declare -f "_package${_p#$pkgbase}")
    _package${_p#$pkgbase}
  }"
done
