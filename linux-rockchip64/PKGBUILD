# Maintainer: Jack Chen <redchenjs@live.com>

_target=rockchip64
_pkgbase="linux-$_target"
pkgbase="$_pkgbase-bin"
pkgname=("$pkgbase" "$pkgbase-headers")
pkgver=5.15.93
_armbver=23.02.2
_kernver="$pkgver-$_target"
pkgrel=1
arch=('aarch64')
_desc="AArch64 multi-platform $_target"
url="https://github.com/armbian/build"
license=('GPL2')
options=('!strip')
provides=("$_pkgbase")
conflics=("$_pkgbase")
source=(
  "linux.preset"
  "https://apt.armbian.com/pool/main/l/linux-$_kernver/linux-dtb-current-${_target}_${_armbver}_arm64.deb"
  "https://apt.armbian.com/pool/main/l/linux-$_kernver/linux-image-current-${_target}_${_armbver}_arm64.deb"
  "https://apt.armbian.com/pool/main/l/linux-$_kernver/linux-headers-current-${_target}_${_armbver}_arm64.deb"
)
sha512sums=(
  'SKIP'
  '684bb5790eb17eb00cca3001d23af4c5cf6728779ad0615d52c7fa0e17212e3511603ce72da0976daab09c017af28011347976bbf34aa5e7265751b70d37e5cb'
  '9552070162d0e306d05a3c7e1549afbab4ce7783e9011699e5c369c3c6028a03c0a6f7621c4ff64c9a06db2de5958809de144fc16b699ade690e4ebb5042511f'
  'a0da6a6fa3bb08d34caef26fb5d4339b5d7a30ea5936ec6eafe901e4b0f2f9abdb10c2f83502269c16e936fa5f521e8d9fc2ec51790533c197c08e1b10064dba'
)
noextract=("${source[@]##*/}")

prepare() {
  cd "$srcdir"

  rm -rf $(find -mindepth 1 -maxdepth 1 -type d)
}

_package() {
  pkgdesc="The Linux Kernel and modules - $_desc"
  depends=('coreutils' 'linux-firmware' 'kmod' 'mkinitcpio>=0.7')
  optdepends=('crda: to set the correct wireless channels of your country')
  backup=("etc/mkinitcpio.d/$_pkgbase.preset")
  provides=('WIREGUARD-MODULE')
  conflicts=('linux')

  cd "$srcdir"

  ar x "linux-dtb-current-${_target}_${_armbver}_arm64.deb"
  tar -xf data.tar.xz
  ar x "linux-image-current-${_target}_${_armbver}_arm64.deb"
  tar -xf data.tar.xz

  install -dm755 "$pkgdir/boot"
  cp -r "boot/dtb-$_kernver" "$pkgdir/boot/dtbs"

  cp "boot/vmlinuz-$_kernver" "$pkgdir/boot/vmlinux-$_target"

  cp "boot/config-$_kernver" "$pkgdir/boot/config-$_target"

  install -dm755 "$pkgdir/usr"
  cp -r lib "$pkgdir/usr/lib"

  # install mkinitcpio preset file
  sed "$_subst" linux.preset |
  install -Dm644 /dev/stdin "$pkgdir/etc/mkinitcpio.d/$_pkgbase.preset"

  # install boot image
  install -Dm644 "boot/vmlinuz-$_kernver" "$pkgdir/usr/lib/modules/$_kernver/vmlinuz"

  # used by mkinitcpio to name the kernel
  echo "$_pkgbase" | install -Dm644 /dev/stdin "$pkgdir/usr/lib/modules/$_kernver/pkgbase"
}

_package-headers() {
  pkgdesc="Header files and scripts for building modules for linux kernel - $_desc"
  conflicts=('linux-headers')

  cd "$srcdir"

  ar x "linux-image-current-${_target}_${_armbver}_arm64.deb"
  tar -xf data.tar.xz
  ar x "linux-headers-current-${_target}_${_armbver}_arm64.deb"
  tar -xf data.tar.xz

  install -dm755 "$pkgdir/usr/lib/modules/$_kernver"
  cp -r "usr/src/linux-headers-$_kernver" "$pkgdir/usr/lib/modules/$_kernver/build"

  install -Dm644 "boot/config-$_kernver" "$pkgdir/usr/lib/modules/$_kernver/build/.config"
  install -Dm644 "boot/System.map-$_kernver" "$pkgdir/usr/lib/modules/$_kernver/build/System.map"

  # add real version for building modules and running depmod from hook
  echo "$_kernver" |
    install -Dm644 /dev/stdin "$pkgdir/usr/lib/modules/$_kernver/build/version"
}

for _p in "${pkgname[@]}"; do
  eval "package_$_p() {
    $(declare -f "_package${_p#$pkgbase}")
    _package${_p#$pkgbase}
  }"
done
